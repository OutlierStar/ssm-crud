<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.atguigu.crud.dao.RestaurantMapper">
  <resultMap id="BaseResultMap" type="com.atguigu.crud.bean.Restaurant">
    <result column="restaurant_name" jdbcType="VARCHAR" property="restaurantName" />
    <result column="restaurant_address" jdbcType="VARCHAR" property="restaurantAddress" />
    <result column="restaurant_notice" jdbcType="VARCHAR" property="restaurantNotice" />
    <result column="restaurant_account" jdbcType="VARCHAR" property="restaurantAccount" />
    <result column="restaurant_password" jdbcType="VARCHAR" property="restaurantPassword" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    restaurant_name, restaurant_address, restaurant_notice, restaurant_account, restaurant_password
  </sql>
  <select id="selectByExample" parameterType="com.atguigu.crud.bean.RestaurantExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from Restaurant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="com.atguigu.crud.bean.RestaurantExample">
    delete from Restaurant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.atguigu.crud.bean.Restaurant">
    insert into Restaurant (restaurant_name, restaurant_address, 
      restaurant_notice, restaurant_account, restaurant_password
      )
    values (#{restaurantName,jdbcType=VARCHAR}, #{restaurantAddress,jdbcType=VARCHAR}, 
      #{restaurantNotice,jdbcType=VARCHAR}, #{restaurantAccount,jdbcType=VARCHAR}, #{restaurantPassword,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.atguigu.crud.bean.Restaurant">
    insert into Restaurant
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="restaurantName != null">
        restaurant_name,
      </if>
      <if test="restaurantAddress != null">
        restaurant_address,
      </if>
      <if test="restaurantNotice != null">
        restaurant_notice,
      </if>
      <if test="restaurantAccount != null">
        restaurant_account,
      </if>
      <if test="restaurantPassword != null">
        restaurant_password,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="restaurantName != null">
        #{restaurantName,jdbcType=VARCHAR},
      </if>
      <if test="restaurantAddress != null">
        #{restaurantAddress,jdbcType=VARCHAR},
      </if>
      <if test="restaurantNotice != null">
        #{restaurantNotice,jdbcType=VARCHAR},
      </if>
      <if test="restaurantAccount != null">
        #{restaurantAccount,jdbcType=VARCHAR},
      </if>
      <if test="restaurantPassword != null">
        #{restaurantPassword,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.atguigu.crud.bean.RestaurantExample" resultType="java.lang.Long">
    select count(*) from Restaurant
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update Restaurant
    <set>
      <if test="record.restaurantName != null">
        restaurant_name = #{record.restaurantName,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantAddress != null">
        restaurant_address = #{record.restaurantAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantNotice != null">
        restaurant_notice = #{record.restaurantNotice,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantAccount != null">
        restaurant_account = #{record.restaurantAccount,jdbcType=VARCHAR},
      </if>
      <if test="record.restaurantPassword != null">
        restaurant_password = #{record.restaurantPassword,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update Restaurant
    set restaurant_name = #{record.restaurantName,jdbcType=VARCHAR},
      restaurant_address = #{record.restaurantAddress,jdbcType=VARCHAR},
      restaurant_notice = #{record.restaurantNotice,jdbcType=VARCHAR},
      restaurant_account = #{record.restaurantAccount,jdbcType=VARCHAR},
      restaurant_password = #{record.restaurantPassword,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>